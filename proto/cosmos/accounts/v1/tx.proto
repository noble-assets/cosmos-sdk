syntax = "proto3";

package cosmos.accounts.v1;

option go_package = "cosmossdk.io/x/accounts/v1";

import "google/protobuf/any.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/tx/v1beta1/tx.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";

// Msg defines the Msg service for the x/accounts module.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // Init creates a new account in the chain.
  rpc Init(MsgInit) returns (MsgInitResponse);

  // Execute executes a message to the target account.
  rpc Execute(MsgExecute) returns (MsgExecuteResponse);
}

// MsgInit defines the Create request type for the Msg/Create RPC method.
message MsgInit {
  option (cosmos.msg.v1.signer) = "sender";

  // sender is the address of the sender of this message.
  string sender = 1;
  // account_type is the type of the account to be created.
  string account_type = 2;
  // message is the message to be sent to the account.
  google.protobuf.Any message = 3;
  // funds contains the coins that the account wants to
  // send alongside the request.
  repeated cosmos.base.v1beta1.Coin funds = 4 [
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true,
    (amino.encoding)         = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// MsgInitResponse defines the Create response type for the Msg/Create RPC method.
message MsgInitResponse {
  // account_address is the address of the newly created account.
  string account_address = 1;
  // response is the response returned by the account implementation.
  google.protobuf.Any response = 2;
}

// MsgExecute defines the Execute request type for the Msg/Execute RPC method.
message MsgExecute {
  option (cosmos.msg.v1.signer) = "sender";
  // sender is the address of the sender of this message.
  string sender = 1;
  // target is the address of the account to be executed.
  string target = 2;
  // message is the message to be sent to the account.
  google.protobuf.Any message = 3;
  // funds contains the coins that the account wants to
  // send alongside the request.
  repeated cosmos.base.v1beta1.Coin funds = 4 [
    (gogoproto.nullable)     = false,
    (amino.dont_omitempty)   = true,
    (amino.encoding)         = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// MsgExecuteResponse defines the Execute response type for the Msg/Execute RPC method.
message MsgExecuteResponse {
  // response is the response returned by the account implementation.
  google.protobuf.Any response = 1;
}